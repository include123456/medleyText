{"_id":"BkYjugHeG","title":"git运用","body":{"blocks":[{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"ag6qs","text":"git运用","type":"header-one"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"c4pqc","text":"1.首先 建立远程仓库   https://github.com/","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"25ehg","text":"2.设置本地远程仓库账号  初始化本地仓库 ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"961vu","text":"        --global 代表全局 一个电脑上 不加的话只在当前目录有效","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"au6fg","text":"mkdir  github //创建文件夹","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"ed4ka","text":"git config --global user.name 'include123456'","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"emfo7","text":"git config --global user.email 'incdlude123456@163.com'","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"6qius","text":"git init","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"es2uo","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"1l40e","text":"2.将远程仓库的信息同步下来 ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"7f7bp","text":"(创建远程仓库","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"8fcgt","text":"    git remote add name url ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"9emq3","text":"在url创建名字为name的仓库（Adds a remote named <name> for the repository at <url>）","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"2ev23","text":"name为远程仓库的名字","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"8co45","text":"    git remote show name ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"30oi2","text":"必须要带name，否则git remote show的作用就是git remote，给出remote name的信息。) ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"1m498","text":"git clone https://github.com/include123456/medleyText.git ","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"99kmt","text":"3.进行代码的同步 （同步后才能提交到远程仓库）  ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"1aooo","text":"git fetch origin master","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"baq88","text":"git log -p master..origin/master","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"feugs","text":"git merge origin/master","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"bbn0f","text":"以上命令的含义：首先从远程的origin的master主分支下载最新的版本到origin/master分支上","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"cufs6","text":"然后比较本地的master分支和origin/master分支的差别","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"fqpnu","text":"最后进行合并","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"bogoc","text":"   上述过程其实可以用以下更清晰的方式来进行：","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"cvtkc","text":"git fetch origin master:tmp","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"eum32","text":"git diff tmp ","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"fk8m4","text":"git merge tmp","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"u2lt","text":" 从远程获取最新的版本到本地的test分支上之后再进行比较合并 ","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"ad60c","text":" ","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"a8c8b","text":"git pull origin master","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"buavs","text":"相当于是从远程获取最新版本并merge到本地在实际使用中，git fetch更安全一些","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"1qsc2","text":"","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"504ue","text":"4.添加要提交的文档","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"5r0h1","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"13c2g","text":"","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"f6ogm","text":"git add  readme.txt //file or doc  add to temp","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"em38s","text":"","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"5383c","text":"git status // view local libary state ","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"c320b","text":"git diff readme.text // show file different from local linary file","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"a5927","text":"git commit -m  'remarks'// commit to local libary","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"9ibsl","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"dmosg","text":"5.同步到远程库","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"47ms7","text":"git push origin master：refs/for/master ","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"6u3u7","text":"git push的一般形式为 git push <远程主机名> <本地分支名>  <远程分支名> ","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"9babd","text":"即是将本地的master分支推送到远程主机origin上的对应master分支， origin 是远程主机名，","type":"custom-code-block-git"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"ct46a","text":"   5.1 git push origin master","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"7td1","text":"        如果远程分支被省略，如上则表示将本地分支推送到与之存在追踪关系的远程分支（通常两者同名），如果该远程分支不存在，则会被新建","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"dnn37","text":"     5.2 git push origin ：refs/for/master ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"boruv","text":"　　如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支，等同于 git push origin --delete master","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"1lrd5","text":"    5.3 git push origin","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"eete8","text":"　　 如果当前分支与远程分支存在追踪关系，则本地分支和远程分支都可以省略，将当前分支推送到origin主机的对应分支 ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"6iveh","text":"　5.4 git push","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"99hhd","text":"　　如果当前分支只有一个远程分支，那么主机名都可以省略，形如 git push，可以使用git branch -r ，查看远程的分支名","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"du70r","text":"    拓展：","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"cqg4p","text":"    （1） git push -u origin master 如果当前分支与多个主机存在追踪关系，则可以使用 -u 参数指定一个默认主机，这样后面就可以不加任何参数使用git push，不带任何参数的git push，默认只推送当前分支，这叫做simple方式，还有一种matching方式，会推送所有有对应的远程分支的本地分支， Git 2.0之前默认使用matching，现在改为simple方式　如果想更改设置，可以使用git config命令。git config --global push.default matching OR git config --global push.default simple；可以使用git config -l 查看配置","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"67rtl","text":"（2） git push --all origin 当遇到这种情况就是不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要 -all 选项","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"1nlu9","text":"（3） git push --force origin git push的时候需要本地先git pull更新到跟服务器版本一致，如果本地版本库比远程服务器上的低，那么一般会提示你git pull更新，如果一定要提交，那么可以使用这个命令。","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"2uum5","text":"（4） git push origin --tags //git push 的时候不会推送分支，如果一定要推送标签的话那么可以使用这个命令","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"6s6u8","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"2ruai","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"bpgp3","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"7t7ii","text":"git init 初始化仓库 ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"8kbdq","text":"git add readme.txt   添加要提交文档","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"fkgbn","text":"git commit -m  \"备注\" 提交 ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"90g9u","text":"git status 命令可以让我们时刻掌握仓库当前的状态","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"ebk89","text":"git diff readme.txt   添加比较文档 当前和历史版本区别 ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"cm0cn","text":"diff --git 标签 origin/标签 //本地与远程主机之间的区别 标签就是分支的名称","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"a83af","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"f8985","text":"git log  命令查看历史版本","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"5dh2g","text":"git log --pretty=oneline  出来版本号和提交时备注 git commit -m 引号内的注释","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"1603i","text":"git reset --hard HEAD^ 回退到上一版本","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"aigk","text":"用HEAD表示当前版本，也就是最新的提交3628164...882e1e0（注意我的提交ID和你的肯定不一样），上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"58q8k","text":" （单独head 加文档 查看内容）","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"3ih7o","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"184s0","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"fppmb","text":"  HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"65dvc","text":"使用命令git reset --hard commit_id。","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"21qu8","text":"   穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"b5cb0","text":"    要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"aej4u","text":"$ git checkout -- readme.txt","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"66sr6","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"f1sq3","text":"命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"f2gpk","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"24k8b","text":"一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"771ji","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"bhkun","text":"一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"5dkku","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"4d1ep","text":"总之，就是让这个文件回到最近一次git commit或git add时的状态。 ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"4r1kb","text":"git checkout -- test.txt  回滚修改","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"21k0u","text":"rm test.txt 删除 ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"9atmr","text":"那就用命令git rm删掉，并且git commit","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"65cgj","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"5alm0","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"4c565","text":"查看分支：git branch \t 查看本地分支","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"c2dmh","text":"\t  git branch  -a 查看远程分支","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"7v5ol","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"b1334","text":"创建分支：git branch <name>","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"jvtf","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"2vrhm","text":"切换分支：git checkout <name>","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"etc09","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"ao247","text":"创建+切换分支：git checkout -b <name>","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"6e26v","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"4b1sl","text":"合并某分支到当前分支：git merge <name>","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"7l4o5","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"6knpj","text":"删除分支：git branch -d <name>","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"d5ug6","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"1uvl5","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"e1agg","text":"当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后，再git stash pop，回到工作现场。","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"5hv01","text":"$ git tag v1.0 设置标签","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"bdtsg","text":"git tag 按字母排序","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"a7v0q","text":"git show <tagname>查看标签信息：","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"5fudv","text":"git tag -a <tagname> -m \"blablabla...\"可以指定标签信息；","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"5oqoh","text":"命令git push origin <tagname>可以推送一个本地标签；","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"45h0t","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"6locd","text":"命令git push origin --tags可以推送全部未推送过的本地标签；","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"bajuq","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"1hccn","text":"命令git tag -d <tagname>可以删除一个本地标签；","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"9cbrm","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"9rd23","text":"命令git push origin :refs/tags/<tagname>可以删除一个远程标签","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"9sepv","text":" origin git为你默认创建的指向这个远程代码库的标签","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"7kipb","text":"git pull origin master (标签)更新分支 ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"figs7","text":"git remote","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"b9163","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"dgmh0","text":"","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"59kd9","text":"","type":"unstyled"}],"entityMap":{}},"dateCreated":"2017-11-24T01:40:49.377Z","lastUpdated":"2017-11-27T06:52:18.157Z","notebookId":"H1LLvxSef"}
